{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\Yo\\\\soyelpropio\\\\Wheather App\\\\Wheather-app\\\\homework\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const apiKey = 'your-api-key-here';\n  const [cities, setCities] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const [showImage, setShowImage] = useState(true);\n\n  // Cargar las ciudades almacenadas en localStorage al inicio de la aplicación\n  useEffect(() => {\n    const storedCities = JSON.parse(localStorage.getItem('cities'));\n    if (storedCities) {\n      setCities(storedCities);\n      setShowImage(false);\n    }\n  }, []);\n\n  // Agregar una ciudad a la lista y a localStorage\n  const addCity = city => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`).then(response => {\n      const newCity = response.data;\n      setCities(prevCities => [...prevCities, newCity]);\n      localStorage.setItem('cities', JSON.stringify([...cities, newCity]));\n      setShowImage(false);\n      setSearchText('');\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  // Eliminar una ciudad de la lista y de localStorage\n  const removeCity = id => {\n    setCities(prevCities => prevCities.filter(city => city.id !== id));\n    localStorage.setItem('cities', JSON.stringify(cities.filter(city => city.id !== id)));\n  };\n\n  // Buscar una ciudad al hacer clic en el botón de buscar\n  const handleSearch = () => {\n    addCity(searchText);\n  };\n\n  // Buscar una ciudad al presionar la tecla Enter en el campo de búsqueda\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      addCity(searchText);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), cities.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        cities: cities,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Clime,\n      alt: \"\",\n      style: {\n        width: \"600px\",\n        margin: \"3.5rem 0 0 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1DYnG/O0YmH7Ywafal1sQCs3ysg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","App","apiKey","cities","setCities","searchText","setSearchText","showImage","setShowImage","storedCities","JSON","parse","localStorage","getItem","addCity","city","get","then","response","newCity","data","prevCities","setItem","stringify","catch","error","console","removeCity","id","filter","handleSearch","handleKeyDown","event","key","onSearch","length","onClose","Clime","width","margin"],"sources":["C:/Users/Asus/Desktop/Yo/soyelpropio/Wheather App/Wheather-app/homework/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const apiKey = 'your-api-key-here';\r\n  const [cities, setCities] = useState([]);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [showImage, setShowImage] = useState(true);\r\n\r\n  // Cargar las ciudades almacenadas en localStorage al inicio de la aplicación\r\n  useEffect(() => {\r\n    const storedCities = JSON.parse(localStorage.getItem('cities'));\r\n    if (storedCities) {\r\n      setCities(storedCities);\r\n      setShowImage(false);\r\n    }\r\n  }, []);\r\n\r\n  // Agregar una ciudad a la lista y a localStorage\r\n  const addCity = (city) => {\r\n    axios\r\n      .get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`)\r\n      .then((response) => {\r\n        const newCity = response.data;\r\n        setCities((prevCities) => [...prevCities, newCity]);\r\n        localStorage.setItem('cities', JSON.stringify([...cities, newCity]));\r\n        setShowImage(false);\r\n        setSearchText('');\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  // Eliminar una ciudad de la lista y de localStorage\r\n  const removeCity = (id) => {\r\n    setCities((prevCities) => prevCities.filter((city) => city.id !== id));\r\n    localStorage.setItem('cities', JSON.stringify(cities.filter((city) => city.id !== id)));\r\n  };\r\n\r\n  // Buscar una ciudad al hacer clic en el botón de buscar\r\n  const handleSearch = () => {\r\n    addCity(searchText);\r\n  };\r\n\r\n  // Buscar una ciudad al presionar la tecla Enter en el campo de búsqueda\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      addCity(searchText);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <Nav onSearch={onSearch} />\r\n      </div>\r\n      {cities.length ? (\r\n        <div>\r\n          <Cards cities={cities} onClose={onClose} />\r\n        </div>\r\n      ) : (\r\n        <img src={Clime} alt=\"\" style={{ width: \"600px\", margin: \"3.5rem 0 0 0\" }} />\r\n      )}\r\n      {/* <video autoPlay loop muted>\r\n        <source src={videoo} type = \"video/mp4\" />\r\n      </video> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}